(defun area-cuadrado ()
  (princ "Ingrese el lado del cuadrado: ")
  (setf lado (read))
  (princ (format nil "El área del cuadrado es: ~a" (* lado lado))))

(defun area-rectangulo ()
  (princ "Ingrese la base del rectángulo: ")
  (setf base (read))
  (princ "Ingrese la altura del rectángulo: ")
  (setf altura (read))
  (princ (format nil "El área del rectángulo es: ~a" (* base altura))))

(defun area-triangulo ()
  (princ "Ingrese la base del triángulo: ")
  (setf base (read))
  (princ "Ingrese la altura del triángulo: ")
  (setf altura (read))
  (princ (format nil "El área del triángulo es: ~a" (/ (* base altura) 2))))

(defun area-circulo ()
  (princ "Ingrese el radio del círculo: ")
  (setf radio (read))
  (princ (format nil "El área del círculo es: ~a" (* pi (* radio radio)))))

(defun area-trapecio ()
  (princ "Ingrese la base mayor del trapecio: ")
  (setf base-mayor (read))
  (princ "Ingrese la base menor del trapecio: ")
  (setf base-menor (read))
  (princ "Ingrese la altura del trapecio: ")
  (setf altura (read))
  (princ (format nil "El área del trapecio es: ~a" (/ (* (+ base-mayor base-menor) altura) 2))))

(defun area-rombo ()
  (princ "Ingrese la diagonal mayor del rombo: ")
  (setf diagonal-mayor (read))
  (princ "Ingrese la diagonal menor del rombo: ")
  (setf diagonal-menor (read))
  (princ (format nil "El área del rombo es: ~a" (/ (* diagonal-mayor diagonal-menor) 2))))

(defun area-pentagono ()
  (princ "Ingrese el lado del pentágono: ")
  (setf lado (read))
  (princ "Ingrese el apotema del pentágono: ")
  (setf apotema (read))
  (princ (format nil "El área del pentágono es: ~a" (/ (* 5 lado apotema) 2))))

(defun area-hexagono ()
  (princ "Ingrese el lado del hexágono: ")
  (setf lado (read))
  (princ (format nil "El área del hexágono es: ~a" (* 3 (sqrt 3) (/ (* lado lado) 2)))))

(defun area-heptagono ()
  (princ "Ingrese el lado del heptágono: ")
  (setf lado (read))
  (princ "Ingrese el apotema del heptágono: ")
  (setf apotema (read))
  (princ (format nil "El área del heptágono es: ~a" (/ (* 7 lado apotema) 2))))

(defun area-octagono ()
  (princ "Ingrese el lado del octágono: ")
  (setf lado (read))
  (princ "Ingrese el apotema del octágono: ")
  (setf apotema (read))
  (princ (format nil "El área del octágono es: ~a" (/ (* 8 lado apotema) 2))))